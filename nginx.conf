events {}

http {
    # Custom log format to include response headers
    log_format response_headers_log '$remote_addr - $remote_user [$time_local] '
                                    '"$request" $status $body_bytes_sent '
                                    '"$http_referer" "$http_user_agent" '
                                    'response_headers: "$sent_http_Access-Control-Allow-Origin"';

    access_log /var/log/nginx/backend_response_headers.log response_headers_log;
    server_names_hash_bucket_size 128;

    # HTTP: redirect all requests to HTTPS
    server {
        listen 80 default_server;
        server_name wp-dev-app.duckdns.org wp-dev-api.duckdns.org;

        return 301 https://$host$request_uri;
    }

    # Block access by IP
    server {
        listen 80;
        listen 443 ssl default_server;

        server_name _;

        ssl_certificate /etc/letsencrypt/live/wp-dev-app.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/wp-dev-app.duckdns.org/privkey.pem;

        return 444;
    }

    # HTTPS for frontend
    server {
        listen 443 ssl;
        server_name wp-dev-app.duckdns.org

        ssl_certificate /etc/letsencrypt/live/wp-dev-app.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/wp-dev-app.duckdns.org/privkey.pem;

        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    # HTTPS for backend
    server {
        listen 443 ssl;
        server_name wp-dev-api.duckdns.org;

        ssl_certificate /etc/letsencrypt/live/wp-dev-api.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/wp-dev-api.duckdns.org/privkey.pem;

        location / {
            proxy_pass http://app:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # Log specific response headers
            access_log /var/log/nginx/backend_response_headers.log response_headers_log;
        }
    }
}