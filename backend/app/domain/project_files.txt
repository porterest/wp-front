File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/auth.py
----------------------------------------
from pydantic import BaseModel, SecretStr


class Credentials(BaseModel):
    wallet_address: str
    payload: str


class AuthTokens(BaseModel):
    access_token: SecretStr
    refresh_token: SecretStr

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/user.py
----------------------------------------
from dataclasses import dataclass
from datetime import datetime
from typing import Optional

from sqlalchemy.orm import Mapped

from domain.dto import CreateDTO

@dataclass
class CreateUserDTO(CreateDTO):
    telegram_id: int
    username: Optional[str]
    first_name: Optional[str]
    last_name: Optional[str]
    last_activity: Optional[datetime]


@dataclass
class UpdateUserDTO:
    telegram_id: Optional[int] = None
    username: Optional[str] = None
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    last_activity: Optional[datetime] = None
    wallet_address: Mapped[Optional[str]]  = None
    balances: Mapped[Optional[float]] = None
    bets: Mapped[Optional[dict]] = None
    transactions: Mapped[Optional[dict]] = None
    deposit: Mapped[Optional[float]] = None
    balance: Mapped[float] = None


================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/app_wallet.py
----------------------------------------
from dataclasses import dataclass
from typing import Optional

from domain.dto import CreateDTO
from domain.enums import WalletType


@dataclass
class CreateAppWalletDTO(CreateDTO):
    address: str
    wallet_type: WalletType
    balance: float


@dataclass
class UpdateAppWalletDTO:
    wallet_type: Optional[WalletType] = None
    balance: Optional[float] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/deposit.py
----------------------------------------
from dataclasses import dataclass
from typing import Optional
from uuid import UUID

from domain.dto import CreateDTO
from domain.enums.deposit import DepositEntryStatus


@dataclass
class DepositEntryCreateDTO(CreateDTO):
    app_wallet_id: UUID
    tx_tag: str
    status: DepositEntryStatus
    amount: Optional[float]
    tx_id: Optional[str]


@dataclass
class DepositEntryUpdateDTO:
    status: Optional[DepositEntryStatus] = None
    amount: Optional[float] = None
    tx_id: Optional[str] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/chain.py
----------------------------------------
from dataclasses import dataclass
from datetime import datetime
from typing import Optional

from domain.dto import CreateDTO
from infrastructure.db.entities import ChainStatus

@dataclass
class CreateChainDTO(CreateDTO):
    current_block: int
    status: ChainStatus
    created_at: datetime
    last_update: Optional[datetime] = None

@dataclass
class UpdateChainDTO:
    current_block: Optional[int] = None
    status: Optional[ChainStatus] = None
    last_update: Optional[datetime] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/bet.py
----------------------------------------
from dataclasses import dataclass
from typing import Optional

from domain.dto import CreateDTO
from domain.enums import BetStatus


@dataclass
class CreateBetDTO(CreateDTO):
    user_id: int
    pair_id: int
    amount: float
    block_number: int
    vector: dict
    status: BetStatus = BetStatus.PENDING


@dataclass
class UpdateBetDTO:
    status: Optional[BetStatus] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/transaction.py
----------------------------------------
from dataclasses import dataclass
from typing import Optional

from domain.dto import CreateDTO
from domain.enums import TransactionType


@dataclass
class CreateTransactionDTO(CreateDTO):
    user_id: int
    type: TransactionType
    amount: float

    tx_id: Optional[str] = None


@dataclass
class UpdateTransactionDTO:
    type: Optional[TransactionType] = None
    amount: Optional[float] = None

    tx_id: Optional[str] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/__init__.py
----------------------------------------
from dataclasses import Field, dataclass
from uuid import UUID, uuid4


@dataclass(kw_only=True)
class CreateDTO:
    id: UUID = Field(default_factory=uuid4)

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/block.py
----------------------------------------
from dataclasses import dataclass
from datetime import datetime
from typing import Optional, Tuple

from domain.dto import CreateDTO
from infrastructure.db.entities import BlockStatus


@dataclass(kw_only=True)
class CreateBlockDTO(CreateDTO):
    block_number: int
    status: BlockStatus
    result_vector: Optional[Tuple[float, float]] = None
    created_at: Optional[datetime]
    completed_at: Optional[str] = None


@dataclass(kw_only=True)
class UpdateBlockDTO:
    status: Optional[BlockStatus] = None
    result_vector: Optional[Tuple[float, float]] = None
    completed_at: Optional[str] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/balance.py
----------------------------------------
from dataclasses import dataclass
from typing import Optional

from domain.dto import CreateDTO


@dataclass
class CreateBalanceDTO(CreateDTO):
    user_id: int
    balance: float
    token_type: str


@dataclass
class UpdateBalanceDTO:
    balance: Optional[float] = None
    token_type: Optional[str] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/aggregated_data.py
----------------------------------------
from dataclasses import dataclass, Field
from typing import Optional

from domain.dto import CreateDTO


@dataclass(kw_only=True)
class CreateAggregatedDataDTO(CreateDTO):
    block_number: int
    aggregated_vector: dict
    ordinal_present: bool = Field(default=False)
    aggregate_bet_amount: float


@dataclass
class UpdateAggregatedDataDTO:
    aggregated_vector: Optional[dict] = None
    ordinal_present: Optional[bool] = None
    transaction_count: Optional[int] = None
    aggregate_bet_amount: Optional[float] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/dto/pair.py
----------------------------------------
from dataclasses import dataclass
from typing import Optional

from domain.dto import CreateDTO


@dataclass
class CreatePairDTO(CreateDTO):
    name: str
    contract_address: str
    last_ratio: str


@dataclass
class UpdatePairDTO:
    name: Optional[str] = None
    contract_address: Optional[str] = None
    last_ratio: Optional[float] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/enums/deposit.py
----------------------------------------
from enum import Enum


class DepositEntryStatus(Enum):
    PENDING = 'pending'
    FUNDED = 'funded'

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/enums/bet.py
----------------------------------------
from enum import Enum


class BetStatus(Enum):
    PENDING = "pending"
    RESOLVED = "resolved"

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/enums/transaction.py
----------------------------------------
from enum import Enum


class TransactionType(Enum):
    INTERNAL_DEPOSIT = "internal_deposit"        # bet closing
    EXTERNAL_DEPOSIT = "external_deposit"        # deposit from external wallet
    INTERNAL_WITHDRAWAL = "internal_withdrawal"  # bet creation
    EXTERNAL_WITHDRAWAL = "external_withdrawal"  # withdraw to external wallet
    REWARD = "reward"                            # reward for being involved in round

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/enums/__init__.py
----------------------------------------
from .bet import BetStatus
from .transaction import TransactionType
from .wallet import WalletType

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/enums/wallet.py
----------------------------------------
from enum import Enum


class WalletType(Enum):
    DEPOSIT = "deposit"
    LIQUIDITY = "liquidity"
    RESERVE = "reserve"

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/user.py
----------------------------------------
from dataclasses import dataclass
from datetime import datetime
from typing import Optional, List

from domain.models import Balance, Bet, Transaction
from domain.models.base import BaseModel


@dataclass(kw_only=True)
class User(BaseModel):
    telegram_id: int
    username: Optional[str] = None
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    last_activity: Optional[datetime] = None

    balances: Optional[List[Balance]] = None
    bets: Optional[List[Bet]] = None
    transactions: Optional[List[Transaction]] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/app_wallet.py
----------------------------------------
from dataclasses import dataclass

from domain.enums import WalletType
from domain.models.base import BaseModel


@dataclass
class AppWallet(BaseModel):
    address: str
    wallet_type: WalletType
    balance: float

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/deposit.py
----------------------------------------
from dataclasses import dataclass
from typing import Optional

from domain.enums.deposit import DepositEntryStatus
from domain.models import AppWallet
from domain.models.base import BaseModel


@dataclass
class DepositEntry(BaseModel):
    app_wallet: AppWallet
    tx_tag: str
    status: DepositEntryStatus

    amount: Optional[float] = None
    tx_id: Optional[str] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/chain.py
----------------------------------------
from dataclasses import dataclass
from datetime import datetime
from typing import Optional
from domain.models.base import BaseModel

@dataclass(kw_only=True)
class Chain(BaseModel):
    id: str
    current_block: int
    last_update: datetime
    created_at: datetime
    status: str

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/bet.py
----------------------------------------
from dataclasses import dataclass
from uuid import UUID

from domain.enums import BetStatus
from domain.models import Pair
from domain.models.base import BaseModel


@dataclass
class Bet(BaseModel):
    user_id: UUID
    pair: Pair
    amount: float
    block_number: int
    vector: tuple[float, float]
    status: BetStatus

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/transaction.py
----------------------------------------
from dataclasses import dataclass
from typing import Optional

from domain.enums import TransactionType
from domain.models.base import BaseModel


@dataclass
class Transaction(BaseModel):
    user_id: int
    type: TransactionType
    amount: float

    tx_id: Optional[str] = None  # would be presented if type is external

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/__init__.py
----------------------------------------
from .pair import Pair
from .user import User
from .bet import Bet
from .balance import Balance
from .aggregated_data import AggregatedData
from .transaction import Transaction
from .app_wallet import AppWallet

__all__ = [
    'Pair',
    'User',
    'Bet',
    'Balance',
    'AggregatedData',
    'Transaction',
    'AppWallet'
]

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/block.py
----------------------------------------
from dataclasses import dataclass
from datetime import datetime
from typing import Optional, List, Tuple
from domain.models.bet import Bet
from domain.models.base import BaseModel


@dataclass(kw_only=True)
class Block(BaseModel):
    block_number: int
    status: str
    created_at: Optional[datetime]
    completed_at: Optional[datetime]
    result_vector: Optional[Tuple[float, float]] = None
    bets: Optional[List[Bet]] = None

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/balance.py
----------------------------------------
from dataclasses import dataclass

from domain.models.base import BaseModel


@dataclass
class Balance(BaseModel):
    balance: float
    token_type: str

    user: 'User'

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/aggregated_data.py
----------------------------------------
from dataclasses import dataclass

from domain.models.base import BaseModel


@dataclass
class AggregatedData(BaseModel):
    block_number: int
    aggregated_vector: dict
    ordinal_present: bool
    aggregate_bet_amount: float
    wallet_address: str

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/base.py
----------------------------------------
from dataclasses import dataclass
from datetime import datetime
from uuid import UUID


@dataclass(kw_only=True)
class BaseModel:
    id: UUID
    created_at: datetime
    updated_at: datetime

================================================================================

File: /Users/daria/PycharmProjects/donald-front/backend/app/domain/models/pair.py
----------------------------------------
from dataclasses import dataclass

from domain.models.base import BaseModel


@dataclass
class Pair(BaseModel):
    name: str
    contract_address: str
    last_ratio: float

================================================================================

